var{Octokit:c}=require("@octokit/core"),l=require("@actions/github");exports.parameters=[{name:"gh_pat",required:!0},{name:"gh_labels",required:!1}];var m=["\u81EA\u52D5\u5316\u5831\u544A"],u,i;exports.run=async({params:r,outputs:e,logger:t})=>{let n=(...s)=>t.log("[95m[GitHub Issue][m",...s),o=(...s)=>t.error("[95m[GitHub Issue][m",...s);if(!e.report){o("\u8ACB\u8A2D\u5B9A report \u6A21\u7D44");return}if(!r.gh_pat){o("\u8ACB\u8A2D\u5B9A GitHub Personal Access Token (gh_pat)");return}if(!r.gh_pat){o("\u8ACB\u8A2D\u5B9A GitHub Personal Access Token (gh_pat)");return}if((await e.report.text()).length==0){n("\u6C92\u6709\u5831\u544A\u5167\u5BB9");return}let a=r.gh_labels||m;if(u=new c({auth:r.gh_pat}),i=l.context,e.issue&&e.issue.number)return await p(e.issue.number,e.report).then(()=>{n("Report Updated.")}),e.issue;{let s=await $(e.report,a);return s&&s.data&&s.data.number&&n(`Report: https://github.com/${i.repo.owner}/${i.repo.repo}/issues/${s.data.number}`),{number:s.data.number}}};async function $(r,e){let t=r.title,n=await r.markdown();return await u.request("POST /repos/{owner}/{repo}/issues",{owner:i.repo.owner,repo:i.repo.repo,title:t,body:n,labels:e.map(a=>b(a.trim()))})}async function p(r,e){let t=await e.markdown();await u.request("PATCH /repos/{owner}/{repo}/issues/{issue_number}",{owner:i.repo.owner,repo:i.repo.repo,issue_number:r,body:t})}function b(r){let e=d(),t=[[/\$time\$/g,"$year$/$month$/$day$ $hour$:$minute$:$second$"],[/\$year\$/g,e[0]],[/\$month\$/g,e[1]],[/\$day\$/g,e[2]],[/\$hour\$/g,e[3]],[/\$minute\$/g,e[4]],[/\$second\$/g,e[5]]];for(let n=0;n<t.length;n++)r=r.replace(t[n][0],t[n][1]);return r}function d(){let r=new Date().toLocaleString("en",{timeZone:"Asia/Taipei"}).split(", "),[e,t,n]=r[0].split("/"),[o,a,s]=r[1].match(/\d{1,2}/g);return+o==12&&r[1].toLowerCase().includes("am")&&(o=String(+o-12)),+o<12&&r[1].toLowerCase().includes("pm")&&(o=String(+o+12)),[n,e,t,o,a,s]}
